{"version":3,"file":"js/879.1cead0bb.js","mappings":"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","sources":["webpack://furniture-project/./src/views/frontend/AboutView.vue","webpack://furniture-project/./node_modules/counterup2/index.js","webpack://furniture-project/./src/views/frontend/AboutView.vue?b24d"],"sourcesContent":["<template>\n  <div class=\"container-fluid\">\n  <div class=\"row align-items-center\">\n    <div class=\"col-md-5 about-bgImg\">\n    </div>\n    <div class=\"col-md-7 p-5\">\n      <h1 class=\"text-title\">2024年質感生活新選擇</h1>\n      <h1 class=\"text-subtitle\">樂居時光手工家具</h1>\n      <p class=\"mb-1 text-content\">\n        我們致力於打造<span class=\"text-accent\">專屬於每位顧客</span>的手工家具，堅持天然材質與純熟工藝，細節之中展現品味。\n      </p>\n      <p class=\"mb-1 text-content\">\n        每一件作品皆由師傅親手打造，結合美學設計與實用功能，為您營造獨一無二的居家氛圍。\n      </p>\n      <p class=\"mb-1 text-content\">在樂居時光，我們不只是製作家具，更傳遞生活的溫度與質感。</p>\n      <div class=\"mt-3\">\n        <span class=\"bg-muted\">天然原木材質</span>\n        <span class=\"bg-muted ms-2\">100%台灣設計</span>\n        <span class=\"bg-muted ms-2\">師傅手工打造</span>\n        <span class=\"bg-muted ms-2\">無毒環保塗料</span>\n        <span class=\"bg-muted ms-2\">終身保固服務</span>\n      </div>\n      <div class=\"row mt-5\">\n        <div class=\"col-md-3\">\n          <h4 class=\"counter-title\">年均顧客</h4>\n          <h2 class=\"counter\">1000 <span class=\"h4 counter\">/位</span></h2>\n        </div>\n        <div class=\"col-md-3\">\n          <h4 class=\"counter-title\">設計獎項</h4>\n          <h2 class=\"counter\">12 <span class=\"h4 counter\">/座</span></h2>\n        </div>\n        <div class=\"col-md-3 counter\">\n          <h4 class=\"counter-title\">原木品項</h4>\n          <h2 class=\"counter\">40 <span class=\"h4 counter\">/種</span></h2>\n        </div>\n        <div class=\"col-md-3\">\n          <h4 class=\"counter-title\">累積作品</h4>\n          <h2 class=\"counter\">500 <span class=\"h4 counter\">/件</span></h2>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n\n<!-- 品牌故事／理念 -->\n<div class=\"container my-7 py-5\">\n  <div class=\"text-center mb-5\">\n    <h2 class=\"text-title\">品牌理念</h2>\n    <p class=\"text-subtitle fs-4\">環保選材・手工製作・得獎設計</p>\n  </div>\n  <div class=\"row\">\n    <div class=\"col-md-6\">\n     <img src=\"@/assets/images/reclaimed wood.jpg\" alt=\"reclaimed\"\n        class=\"img-fluid rounded-circle shadow-lg\"/>\n    </div>\n    <div class=\"col-md-4 m-auto text-center\">\n      <h4 class=\"mt-4 text-subtitle fs-3\">環保選材</h4>\n      <p class=\"text-content fw-bold\">\n        精選可再生木材與低揮發性環保塗料，減少對環境的負擔。每項材料皆經過嚴格篩選，不僅堅固耐用，更展現我們對永續地球的承諾，讓您在享受美好生活的同時，也為綠色未來盡一份心力。\n      </p>\n    </div>\n  </div>\n\n  <div class=\"row flex-row-reverse justify-content-between mt-4\">\n    <div class=\"col-md-6\">\n      <img src=\"@/assets/images/handmade.jpg\" alt=\"handmade\"\n        class=\"img-fluid rounded-circle shadow-lg\"/>\n    </div>\n    <div class=\"col-md-4 m-auto text-center\">\n      <h4 class=\"mt-4 text-subtitle fs-3\">手工製作</h4>\n      <p class=\"text-content fw-bold\">\n        每一件作品皆由經驗豐富的工匠親手打造，結合傳統工藝與現代設計思維，從打磨、拼接到上漆，步驟精細、講究品質。每個細節都體現出製作者對藝術的熱情與對品質的堅持。\n      </p>\n    </div>\n  </div>\n\n  <div class=\"row mt-4\">\n    <div class=\"col-md-6\">\n      <img src=\"@/assets/images/award.jpg\" alt=\"award\"\n        class=\"img-fluid rounded-circle shadow-lg\"/>\n    </div>\n    <div class=\"col-md-4 m-auto text-center\">\n      <h4 class=\"mt-4 text-subtitle fs-3\">得獎設計</h4>\n      <p class=\"text-content fw-bold\">\n        我們的設計團隊致力於創造兼具功能與美感的家具作品，並榮獲多項國際設計大獎肯定。每件產品都融合實用性、創新性與藝術感，為現代空間注入細膩而獨到的生活風格。\n      </p>\n    </div>\n  </div>\n</div>\n</template>\n\n<script>\nimport { onMounted } from 'vue';\nimport counterUp from 'counterup2';\n\nexport default {\n  name: 'AboutView',\n  setup() {\n    onMounted(() => {\n      const callback = (entries) => {\n        entries.forEach((entry) => {\n          const el = entry.target;\n          if (entry.isIntersecting && !el.classList.contains('is-visible')) {\n            counterUp(el, {\n              duration: 1500,\n              delay: 16,\n            });\n            el.classList.add('is-visible');\n          }\n        });\n      };\n\n      const observer = new IntersectionObserver(callback, { threshold: 0.5 });\n      const counters = document.querySelectorAll('.counter');\n      counters.forEach((counter) => observer.observe(counter));\n    });\n  },\n};\n</script>\n\n<style>\n.about-bgImg{\n  background-image: url(@/assets/images/sofa/sofa8.jpg);\n  background-position: center center;\n  background-size: cover;\n  height: 480px;\n  box-shadow: 0 6px 16px rgba(0, 0, 0, 0.4);\n  border-radius: 8px;\n}\n\n.text-title{\n  color: #4F332D;\n  font-weight: bolder;\n}\n.text-subtitle{\n  color: #7B5C4A;\n  font-weight: bold;\n}\n.text-content{\n  color: #5E3E32;\n  font-size: 20px;\n  font-weight: 500;\n  line-height: 1.8;\n}\n/* 數字區塊強化：深棕色字體 */\n.counter-title{\n  font-size: 28px;\n  color: #3A231B;\n  font-weight: 900;\n}\n\n.counter {\n  color: #3A231B;\n  font-weight: 700;\n}\n\n/* 補充資訊色：米白，適合背景、badge、標籤 */\n.bg-muted {\n  background-color: #BFA89C;\n  color: #3A231B;\n  padding: 0.5rem 1rem;\n  border-radius: 6px;\n  display: inline-block;\n  font-weight: 800;\n  font-size: 1rem;\n  letter-spacing: 0.5px;\n  box-shadow: 0 2px 6px rgba(0, 0, 0, 0.15);\n}\n\n/* 成功色點綴：可用於標籤、強調用語、按鈕等 */\n.text-accent {\n  color: #7A9B76;\n  font-weight: 900;\n}\n\n/* .btn-accent {\n  background-color: #7A9B76;\n  color: white;\n  border: none;\n  padding: 0.5rem 1.25rem;\n  border-radius: 6px;\n  font-weight: 600;\n  transition: background-color 0.3s ease;\n}\n\n.btn-accent:hover {\n  background-color: #6b8c69;\n} */\n\n</style>\n","export const counterUp = ( el, options = {} ) => {\n\tconst {\n\t\taction = 'start',\n\t\tduration = 1000,\n\t\tdelay = 16,\n\t} = options\n\n\t// Allow people to use this as a stop method.\n\tif ( action === 'stop' ) {\n\t\tstopCountUp( el )\n\t\treturn\n\t}\n\n\tstopCountUp( el )\n\n\t// If no number, don't do anything.\n\tif ( ! /[0-9]/.test( el.innerHTML ) ) {\n\t\treturn\n\t}\n\n\tconst nums = divideNumbers( el.innerHTML, {\n\t\tduration: duration || el.getAttribute( 'data-duration' ),\n\t\tdelay: delay || el.getAttribute( 'data-delay' ),\n\t} )\n\n\t// Remember the contents.\n\tel._countUpOrigInnerHTML = el.innerHTML\n\n\t// Start counting.\n\tel.innerHTML = nums[ 0 ] || '&nbsp;' // Use a non-breaking space to prevent layout shift.\n\tel.style.visibility = 'visible'\n\n\t// Function for displaying output with the set time and delay.\n\tconst output = function() {\n\t\tel.innerHTML = nums.shift() || '&nbsp;' // Use a non-breaking space to prevent layout shift.\n\t\tif ( nums.length ) {\n\t\t\tclearTimeout( el.countUpTimeout )\n\t\t\tel.countUpTimeout = setTimeout( output, delay )\n\t\t} else {\n\t\t\tel._countUpOrigInnerHTML = undefined\n\t\t}\n\t}\n\tel.countUpTimeout = setTimeout( output, delay )\n}\n\nexport default counterUp\n\nconst stopCountUp = el => {\n\tclearTimeout( el.countUpTimeout )\n\tif ( el._countUpOrigInnerHTML ) {\n\t\tel.innerHTML = el._countUpOrigInnerHTML\n\t\tel._countUpOrigInnerHTML = undefined\n\t}\n\tel.style.visibility = ''\n}\n\nexport const divideNumbers = ( numToDivide, options = {} ) => {\n\tconst {\n\t\tduration = 1000,\n\t\tdelay = 16,\n\t} = options\n\n\t// Number of times the number will change.\n\tconst divisions = duration / delay\n\n\t// Split numbers and html tags.\n\tconst splitValues = numToDivide.toString().split( /(<[^>]+>|[0-9.][,.0-9]*[0-9]*)/ )\n\n\t// Contains all numbers to be displayed.\n\tconst nums = []\n\n\t// Set blank strings to ready the split values.\n\tfor ( let k = 0; k < divisions; k++ ) {\n\t\tnums.push( '' )\n\t}\n\n\t// Loop through all numbers and html tags.\n\tfor ( let i = 0; i < splitValues.length; i++ ) {\n\t\t// If number split it into smaller numbers and insert it to nums.\n\t\tif ( /([0-9.][,.0-9]*[0-9]*)/.test( splitValues[ i ] ) && ! /<[^>]+>/.test( splitValues[ i ] ) ) {\n\t\t\tlet num = splitValues[ i ]\n\n\t\t\t// Find all the occurances of . and ,\n\t\t\tconst symbols = [ ...num.matchAll( /[.,]/g ) ]\n\t\t\t\t// Get all the locations of the characters so we can re-place them later on.\n\t\t\t\t.map( m => ( { char: m[0], i: num.length - m.index - 1 } ) )\n\t\t\t\t// Make sure we go through the characters from right to left\n\t\t\t\t.sort( ( a, b ) => a.i - b.i )\n\n\t\t\t// Remove commas and dots for computation purposes.\n\t\t\tnum = num.replace( /[.,]/g, '' )\n\n\t\t\t// Start adding numbers from the end.\n\t\t\tlet k = nums.length - 1\n\n\t\t\t// Create small numbers we'll the count over.\n\t\t\tfor ( let val = divisions; val >= 1; val-- ) {\n\t\t\t\tlet newNum = parseInt( num / divisions * val, 10 )\n\n\t\t\t\t// Re-insert the symbols in the indices they were at.\n\t\t\t\tnewNum = symbols.reduce( ( num, { char, i } ) => {\n\t\t\t\t\treturn num.length <= i ? num // If we don't have enough numbers, don't insert the symbol.\n\t\t\t\t\t\t: num.slice( 0, -i ) + char + num.slice( -i )\n\t\t\t\t}, newNum.toString() )\n\n\t\t\t\t// Insert all small numbers.\n\t\t\t\tnums[ k-- ] += newNum\n\t\t\t}\n\t\t} else {\n\t\t\t// Insert all non-numbers in the same place.\n\t\t\tfor ( let k = 0; k < divisions; k++ ) {\n\t\t\t\tnums[ k ] += splitValues[ i ]\n\t\t\t}\n\t\t}\n\t}\n\n\t// The last value of the element should be the original one.\n\tnums[ nums.length ] = numToDivide.toString()\n\n\treturn nums\n}\n","import { render } from \"./AboutView.vue?vue&type=template&id=ad880f58\"\nimport script from \"./AboutView.vue?vue&type=script&lang=js\"\nexport * from \"./AboutView.vue?vue&type=script&lang=js\"\n\nimport \"./AboutView.vue?vue&type=style&index=0&id=ad880f58&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["_createStaticVNode","_imports_0","_imports_1","_imports_2","counterUp","el","options","action","duration","delay","stopCountUp","test","innerHTML","nums","divideNumbers","getAttribute","_countUpOrigInnerHTML","style","visibility","output","shift","length","clearTimeout","countUpTimeout","setTimeout","undefined","numToDivide","divisions","splitValues","toString","split","k","push","i","num","symbols","matchAll","map","m","char","index","sort","a","b","replace","val","newNum","parseInt","reduce","slice","name","setup","onMounted","callback","entries","forEach","entry","target","isIntersecting","classList","contains","add","observer","IntersectionObserver","threshold","counters","document","querySelectorAll","counter","observe","__exports__","render"],"sourceRoot":""}